name: App BFF API Tests

on:
  push:
    branches: [ "web", "main", "hxh-apitest-development" ]
  pull_request:
    branches: [ "web", "main", "hxh-apitest-development" ]

jobs:
  jmeter:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install JMeter
        run: |
          wget https://mirrors.tuna.tsinghua.edu.cn/apache/jmeter/binaries/apache-jmeter-5.6.3.tgz
          tar -xzf apache-jmeter-5.6.3.tgz

      - name: Install JMeter Plugins Manager and JSON Path Assertion
        run: |
          wget https://repo1.maven.org/maven2/kg/apc/cmdrunner/2.3/cmdrunner-2.3.jar -O ./apache-jmeter-5.6.3/lib/cmdrunner-2.3.jar
          # jmeter-plugins.org/get/ 有时会返回 404，改为从 Maven Central 下载指定版本
          PLUGIN_VERSION=1.8
          wget https://repo1.maven.org/maven2/kg/apc/jmeter-plugins-manager/${PLUGIN_VERSION}/jmeter-plugins-manager-${PLUGIN_VERSION}.jar -O ./apache-jmeter-5.6.3/lib/ext/jmeter-plugins-manager.jar
          # 直接手动下载 JSON Path Assertion 插件，避免依赖在线仓库
          JSON_PLUGIN_VERSION=2.7
          wget https://repo1.maven.org/maven2/kg/apc/jmeter-plugins-json/${JSON_PLUGIN_VERSION}/jmeter-plugins-json-${JSON_PLUGIN_VERSION}.jar -O ./apache-jmeter-5.6.3/lib/ext/jmeter-plugins-json.jar

      - name: Prepare reports directory
        run: |
          # 清理整个reports目录，包括旧的jmeter-report目录
          rm -rf reports
          mkdir -p reports

      - name: Run App BFF JMeter Tests
        run: |
          # 使用 App BFF 专用脚本来执行所有测试
          # 脚本会自动处理黑名单、错误处理和报告生成
          bash scripts/run_app_tests.sh

      - name: Analyze Test Results
        id: test_results
        run: |
          # 分析测试结果，提取失败用例信息
          echo "=== 测试结果分析 ===" > reports/test_summary.txt
          echo "总测试用例数: $(grep -c '^[0-9]' reports/jmeter-report/all_cases.jtl)" >> reports/test_summary.txt
          echo "成功用例数: $(awk -F',' '$8 == "true" {count++} END {print count+0}' reports/jmeter-report/all_cases.jtl)" >> reports/test_summary.txt
          echo "失败用例数: $(awk -F',' '$8 == "false" {count++} END {print count+0}' reports/jmeter-report/all_cases.jtl)" >> reports/test_summary.txt
          echo "" >> reports/test_summary.txt
          
          # 统计失败用例数量 - 使用精确的字段解析
          failed_count=$(awk -F',' '$8 == "false" {count++} END {print count+0}' reports/jmeter-report/all_cases.jtl)
          echo "failed_count=$failed_count" >> $GITHUB_OUTPUT
          
          # 提取失败的用例详情
          if [ $failed_count -gt 0 ]; then
            echo "=== 失败的测试用例 ===" >> reports/test_summary.txt
            # 使用更精确的字段解析，JTL文件格式：timestamp,elapsed,label,responseCode,responseMessage,threadName,dataType,success,failureMessage,bytes,sentBytes,grpThreads,allThreads,URL,filename,latencyId,connectTime
            awk -F',' '$8 == "false" {print "用例: " $3 "\n响应码: " $4 "\n失败原因: " $9 "\n"}' reports/jmeter-report/all_cases.jtl >> reports/test_summary.txt
          else
            echo "所有测试用例都执行成功！" >> reports/test_summary.txt
          fi
          
          # 显示测试摘要
          cat reports/test_summary.txt
          
          # 设置输出变量
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          cat reports/test_summary.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-reports
          path: reports/

      - name: Send success notification
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: ${{ steps.test_results.outputs.failed_count > 0 && '❌ JMeter App API 测试失败' || '✅ JMeter App API 测试成功' }} - ${{ github.repository }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.MAIL_USERNAME }}
          body: |
            ${{ steps.test_results.outputs.failed_count > 0 && '🚨 JMeter App API 测试执行完成，但有失败用例！' || '🎉 JMeter App API 测试执行成功！' }}
            
            📊 测试详情:
            - 仓库: ${{ github.repository }}
            - 分支: ${{ github.ref_name }}
            - 提交: ${{ github.sha }}
            - 触发者: ${{ github.actor }}
            - 执行时间: ${{ github.event.head_commit.timestamp }}
            
            📈 测试结果摘要:
            ${{ steps.test_results.outputs.summary }}
            
            📁 详细测试报告已生成，可在 GitHub Actions 中下载。
            
            🔗 查看详情: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Send failure notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "❌ JMeter App API 测试失败 - ${{ github.repository }}"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.MAIL_USERNAME }}
          body: |
            🚨 JMeter App API 测试执行失败！
            
            📊 失败详情:
            - 仓库: ${{ github.repository }}
            - 分支: ${{ github.ref_name }}
            - 提交: ${{ github.sha }}
            - 触发者: ${{ github.actor }}
            - 执行时间: ${{ github.event.head_commit.timestamp }}
            
            📈 测试结果摘要:
            ${{ steps.test_results.outputs.summary }}
            
            ⚠️ 请立即检查测试失败原因并修复问题。
            
            🔗 查看详情: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
