<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="repost">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - 读取认证信息" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="filename">data/web_auth_tokens.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">timestamp,username,statusCode,responseTime,sessionId,rememberMe,gtMc,location,upstreamServiceTime,userToken,userAuthorization,conversationsToken,cookieString,testResult</stringProp>
        </CSVDataSet>
        <hashTree/>
        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="验证认证信息" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">// 验证认证信息是否正确读取
log.info(&quot;=== 认证信息验证 ===&quot;)
log.info(&quot;SessionID: ${sessionId}&quot;)
log.info(&quot;RememberMe: ${rememberMe}&quot;)
log.info(&quot;GT_MC: ${gtMc}&quot;)
log.info(&quot;UserToken: ${userToken}&quot;)
log.info(&quot;UserAuthorization: ${userAuthorization}&quot;)
log.info(&quot;ConversationsToken: ${conversationsToken}&quot;)
log.info(&quot;Cookie字符串: ${cookieString}&quot;)

// 检查是否有有效的认证信息
def hasValidAuth = false
if (sessionId != &quot;NO_SESSION_ID&quot; || userAuthorization != &quot;NO_USER_AUTHORIZATION&quot; || conversationsToken != &quot;NO_CONVERSATIONS_TOKEN&quot;) {
    hasValidAuth = true
    log.info(&quot;✓ 找到有效认证信息&quot;)
} else {
    log.warn(&quot;⚠ 未找到有效认证信息，可能需要先运行tg1登录测试&quot;)
}

// 设置认证状态变量
vars.put(&quot;HAS_VALID_AUTH&quot;, hasValidAuth.toString())
vars.put(&quot;AUTH_STATUS&quot;, hasValidAuth ? &quot;AUTHENTICATED&quot; : &quot;NOT_AUTHENTICATED&quot;)

log.info(&quot;认证状态: ${vars.get(&apos;AUTH_STATUS&apos;)}&quot;)
log.info(&quot;=== 认证信息验证完成 ===&quot;)
</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223PreProcessor>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Header Manager with Auth">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Content-Type" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
            <elementProp name="Accept" elementType="Header">
              <stringProp name="Header.name">Accept</stringProp>
              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
            </elementProp>
            <elementProp name="Cache-Control" elementType="Header">
              <stringProp name="Header.name">Cache-Control</stringProp>
              <stringProp name="Header.value">no-cache</stringProp>
            </elementProp>
            <elementProp name="Connection" elementType="Header">
              <stringProp name="Header.name">Connection</stringProp>
              <stringProp name="Header.value">keep-alive</stringProp>
            </elementProp>
            <elementProp name="Cookie" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value">${cookieString}</stringProp>
            </elementProp>
            <elementProp name="Authorization" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${userAuthorization}</stringProp>
            </elementProp>
            <elementProp name="User-Agent" elementType="Header">
              <stringProp name="Header.name">User-Agent</stringProp>
              <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36</stringProp>
            </elementProp>
            <elementProp name="Referer" elementType="Header">
              <stringProp name="Header.name">Referer</stringProp>
              <stringProp name="Header.value">https://www.gumtree.com/</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="repost">
          <stringProp name="HTTPSampler.domain">my.gumtree.com</stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(PROTOCOL)}</stringProp>
          <stringProp name="HTTPSampler.path">/postad/695f48e0acf64759be46f00bd32e1549</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;formErrors&quot;:{},&quot;categoryId&quot;:&quot;10685&quot;,&quot;locationId&quot;:&quot;203&quot;,&quot;postcode&quot;:&quot;TW91EJ&quot;,&quot;visibleOnMap&quot;:true,&quot;area&quot;:null,&quot;termsAgreed&quot;:null,&quot;title&quot;:&quot;Commercial Refrigerator Glass Doors - Fits Standard Cooler Openings&quot;,&quot;description&quot;:&quot;Commercial Refrigerator Glass Doors - Fits Standard Cooler Openings&quot;,&quot;previousContactName&quot;:null,&quot;contactName&quot;:&quot;donny&quot;,&quot;previousContactEmail&quot;:null,&quot;contactEmail&quot;:&quot;donny.han@gumtree.com&quot;,&quot;contactTelephone&quot;:&quot;&quot;,&quot;contactUrl&quot;:null,&quot;useEmail&quot;:true,&quot;usePhone&quot;:false,&quot;useUrl&quot;:false,&quot;checkoutVariationId&quot;:null,&quot;mainImageId&quot;:&quot;0&quot;,&quot;imageIds&quot;:[],&quot;youtubeLink&quot;:null,&quot;websiteUrl&quot;:&quot;http://&quot;,&quot;firstName&quot;:null,&quot;lastName&quot;:null,&quot;emailAddress&quot;:null,&quot;telephoneNumber&quot;:null,&quot;password&quot;:null,&quot;optInMarketing&quot;:null,&quot;inAutobizFlow&quot;:false,&quot;defaultSellerType&quot;:null,&quot;advertLimit&quot;:null,&quot;advertCount&quot;:null,&quot;vrmStatus&quot;:&quot;VRM_NONE&quot;,&quot;attributes&quot;:{&quot;price&quot;:&quot;150&quot;,&quot;diy_tools_materials_condition&quot;:&quot;as_good_as_new&quot;},&quot;features&quot;:{&quot;WEBSITE_URL&quot;:{&quot;productName&quot;:&quot;WEBSITE_URL&quot;,&quot;selected&quot;:false},&quot;FEATURED&quot;:{&quot;selected&quot;:false,&quot;productName&quot;:&quot;FEATURE_7_DAY&quot;},&quot;URGENT&quot;:{&quot;productName&quot;:&quot;URGENT&quot;,&quot;selected&quot;:false},&quot;SPOTLIGHT&quot;:{&quot;productName&quot;:&quot;HOMEPAGE_SPOTLIGHT&quot;,&quot;selected&quot;:false}},&quot;extendFields&quot;:{&quot;appVersion&quot;:&quot;&quot;},&quot;removeDraft&quot;:false,&quot;attributeStep&quot;:null,&quot;aiFlowType&quot;:null,&quot;images-file-input&quot;:{},&quot;shouldByPassWebsiteLinkPayment&quot;:false,&quot;submitForm&quot;:true}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSR223Assertion guiclass="TestBeanGUI" testclass="JSR223Assertion" testname="检查状态码" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">def responseCode = prev.getResponseCode()
def allowedCodes = [&apos;200&apos;, &apos;400&apos;]

if (!allowedCodes.contains(responseCode)) {
    AssertionResult.setFailure(true)
    AssertionResult.setFailureMessage(&quot;响应码 ${responseCode} 不在允许的范围内 (200/400)&quot;)
} else {
    AssertionResult.setFailure(false)
}
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Assertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
