<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Gumtree API Test - Platform Specific Headers">
      <stringProp name="TestPlan.comments">Test plan generated from cURL command for Gumtree VIP screen</stringProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config">
        <stringProp name="filename">data/auth_tokens.csv</stringProp>
        <stringProp name="fileEncoding">UTF-8</stringProp>
        <stringProp name="variableNames">userId,userToken,userAuthorization,threatMetrixSession,userEmail,userDisplayName,accountId,userType,lastUpdated</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG8: Post Ad Scenario (iOS - my.gumtree.com)" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Post Ad HTTP Header Manager (iOS - my.gumtree.com)" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="Host" elementType="Header">
              <stringProp name="Header.name">Host</stringProp>
              <stringProp name="Header.value">${__P(HOST_MY_GUMTREE)}</stringProp>
            </elementProp>
            <elementProp name="Cookie" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value">${__P(IOS_MY_GUMTREE_COOKIE)}</stringProp>
            </elementProp>
            <elementProp name="sec-ch-ua" elementType="Header">
              <stringProp name="Header.name">sec-ch-ua</stringProp>
              <stringProp name="Header.value">&quot;Android WebView&quot;;v=&quot;117&quot;, &quot;Not;A=Brand&quot;;v=&quot;8&quot;, &quot;Chromium&quot;;v=&quot;117&quot;</stringProp>
            </elementProp>
            <elementProp name="sec-ch-ua-platform" elementType="Header">
              <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
              <stringProp name="Header.value">&quot;Android&quot;</stringProp>
            </elementProp>
            <elementProp name="sec-ch-ua-mobile" elementType="Header">
              <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
              <stringProp name="Header.value">?1</stringProp>
            </elementProp>
            <elementProp name="user-agent" elementType="Header">
              <stringProp name="Header.name">user-agent</stringProp>
              <stringProp name="Header.value">${__P(IOS_USER_AGENT_MY_GUMTREE)}</stringProp>
            </elementProp>
            <elementProp name="content-type" elementType="Header">
              <stringProp name="Header.name">content-type</stringProp>
              <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
            </elementProp>
            <elementProp name="accept" elementType="Header">
              <stringProp name="Header.name">accept</stringProp>
              <stringProp name="Header.value">*/*</stringProp>
            </elementProp>
            <elementProp name="origin" elementType="Header">
              <stringProp name="Header.name">origin</stringProp>
              <stringProp name="Header.value">https://www.gumtree.com</stringProp>
            </elementProp>
            <elementProp name="x-requested-with" elementType="Header">
              <stringProp name="Header.name">x-requested-with</stringProp>
              <stringProp name="Header.value">com.gumtree.android</stringProp>
            </elementProp>
            <elementProp name="sec-fetch-site" elementType="Header">
              <stringProp name="Header.name">sec-fetch-site</stringProp>
              <stringProp name="Header.value">same-site</stringProp>
            </elementProp>
            <elementProp name="sec-fetch-mode" elementType="Header">
              <stringProp name="Header.name">sec-fetch-mode</stringProp>
              <stringProp name="Header.value">cors</stringProp>
            </elementProp>
            <elementProp name="sec-fetch-dest" elementType="Header">
              <stringProp name="Header.name">sec-fetch-dest</stringProp>
              <stringProp name="Header.value">empty</stringProp>
            </elementProp>
            <elementProp name="referer" elementType="Header">
              <stringProp name="Header.name">referer</stringProp>
              <stringProp name="Header.value">https://www.gumtree.com/</stringProp>
            </elementProp>
            <elementProp name="accept-language" elementType="Header">
              <stringProp name="Header.name">accept-language</stringProp>
              <stringProp name="Header.value">${__P(IOS_ACCEPT_LANGUAGE)}</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">Headers for iOS Post Ad to my.gumtree.com. Cookie is critical and provided via variable.</stringProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">处理my.gumtree.com的Cookie</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.1 Post Ad ">
          <stringProp name="TestPlan.comments">发布/重新发布广告接口 (iOS version)。预期成功 (200)。</stringProp>
          <stringProp name="HTTPSampler.domain">${__P(HOST_MY_GUMTREE)}</stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(PROTOCOL)}</stringProp>
          <stringProp name="HTTPSampler.path">/postad/${__P(POST_AD_TRANSACTION_ID_ANDROID)}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;formErrors&quot;: {},&#xd;
    &quot;categoryId&quot;: &quot;153&quot;,&#xd;
    &quot;locationId&quot;: &quot;203&quot;,&#xd;
    &quot;postcode&quot;: &quot;TW91EJ&quot;,&#xd;
    &quot;visibleOnMap&quot;: true,&#xd;
    &quot;area&quot;: null,&#xd;
    &quot;termsAgreed&quot;: null,&#xd;
    &quot;title&quot;: &quot;Large Laundry Basket&quot;,&#xd;
    &quot;description&quot;: &quot;HomeHacks 2-Pack Large Laundry Basket, Waterproof, Freestanding Laundry Hamper, Collapsible Tall Clothes Hamper with Extended Handles for Clothes Toys in the Dorm and Family-(Gradient Grey, 75L)&quot;,&#xd;
    &quot;previousContactName&quot;: null,&#xd;
    &quot;contactName&quot;: &quot;donny&quot;,&#xd;
    &quot;previousContactEmail&quot;: null,&#xd;
    &quot;contactEmail&quot;: &quot;donny.han@gumtree.com&quot;,&#xd;
    &quot;contactTelephone&quot;: &quot;&quot;,&#xd;
    &quot;contactUrl&quot;: null,&#xd;
    &quot;useEmail&quot;: true,&#xd;
    &quot;usePhone&quot;: false,&#xd;
    &quot;useUrl&quot;: false,&#xd;
    &quot;checkoutVariationId&quot;: null,&#xd;
    &quot;mainImageId&quot;: &quot;2383846006&quot;,&#xd;
    &quot;imageIds&quot;: [&#xd;
        &quot;2383846006&quot;&#xd;
    ],&#xd;
    &quot;youtubeLink&quot;: null,&#xd;
    &quot;websiteUrl&quot;: &quot;http://&quot;,&#xd;
    &quot;firstName&quot;: null,&#xd;
    &quot;lastName&quot;: null,&#xd;
    &quot;emailAddress&quot;: null,&#xd;
    &quot;telephoneNumber&quot;: null,&#xd;
    &quot;password&quot;: null,&#xd;
    &quot;optInMarketing&quot;: null,&#xd;
    &quot;inAutobizFlow&quot;: false,&#xd;
    &quot;vrmStatus&quot;: &quot;VRM_NONE&quot;,&#xd;
    &quot;attributes&quot;: {&#xd;
        &quot;price&quot;: &quot;4&quot;&#xd;
    },&#xd;
    &quot;features&quot;: {&#xd;
        &quot;FEATURED&quot;: {&#xd;
            &quot;selected&quot;: false,&#xd;
            &quot;productName&quot;: &quot;FEATURE_7_DAY&quot;&#xd;
        },&#xd;
        &quot;URGENT&quot;: {&#xd;
            &quot;productName&quot;: &quot;URGENT&quot;,&#xd;
            &quot;selected&quot;: false&#xd;
        },&#xd;
        &quot;SPOTLIGHT&quot;: {&#xd;
            &quot;productName&quot;: &quot;HOMEPAGE_SPOTLIGHT&quot;,&#xd;
            &quot;selected&quot;: false&#xd;
        }&#xd;
    },&#xd;
    &quot;extendFields&quot;: {&#xd;
        &quot;appVersion&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;removeDraft&quot;: false,&#xd;
    &quot;images-file-input&quot;: {},&#xd;
    &quot;submitForm&quot;: true&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言状态码 200 (OK)" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">期望发布广告成功返回状态码 200 (OK)。</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="TG8: Post Ad Scenario (iOS - my.gumtree.com)">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Post Ad HTTP Header Manager (iOS - my.gumtree.com)">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="authorisation-user" elementType="Header">
              <stringProp name="Header.name">authorisation-user</stringProp>
              <stringProp name="Header.value">Basic bW9iaWxlOjBudGgzbTB2MyE=</stringProp>
            </elementProp>
            <elementProp name="authorisation-user-email" elementType="Header">
              <stringProp name="Header.name">authorisation-user-email</stringProp>
              <stringProp name="Header.value">${__P(CORRECT_USERNAME)}</stringProp>
            </elementProp>
            <elementProp name="authorisation-user-token" elementType="Header">
              <stringProp name="Header.name">authorisation-user-token</stringProp>
              <stringProp name="Header.value">${userToken}</stringProp>
            </elementProp>
            <elementProp name="authorization" elementType="Header">
              <stringProp name="Header.name">authorization</stringProp>
              <stringProp name="Header.value">${userAuthorization}</stringProp>
            </elementProp>
            <elementProp name="user-agent" elementType="Header">
              <stringProp name="Header.name">user-agent</stringProp>
              <stringProp name="Header.value">${__P(IOS_USER_AGENT_BFF)}</stringProp>
            </elementProp>
            <elementProp name="platform" elementType="Header">
              <stringProp name="Header.name">platform</stringProp>
              <stringProp name="Header.value">${__P(IOS_PLATFORM)}</stringProp>
            </elementProp>
            <elementProp name="udid" elementType="Header">
              <stringProp name="Header.name">udid</stringProp>
              <stringProp name="Header.value">${__P(IOS_UDID)}</stringProp>
            </elementProp>
            <elementProp name="app-version" elementType="Header">
              <stringProp name="Header.name">app-version</stringProp>
              <stringProp name="Header.value">${__P(IOS_APP_VERSION_BFF)}</stringProp>
            </elementProp>
            <elementProp name="experiments" elementType="Header">
              <stringProp name="Header.name">experiments</stringProp>
              <stringProp name="Header.value">${__P(IOS_EXPERIMENTS_BFF)}</stringProp>
            </elementProp>
            <elementProp name="app-debug-mode" elementType="Header">
              <stringProp name="Header.name">app-debug-mode</stringProp>
              <stringProp name="Header.value">${__P(IOS_APP_DEBUG_MODE)}</stringProp>
            </elementProp>
            <elementProp name="userid" elementType="Header">
              <stringProp name="Header.name">userid</stringProp>
              <stringProp name="Header.value">${userId}</stringProp>
            </elementProp>
            <elementProp name="Cookie" elementType="Header">
              <stringProp name="Header.name">Cookie</stringProp>
              <stringProp name="Header.value">${__P(IOS_COOKIE_GCLB_BFF)}</stringProp>
            </elementProp>
            <elementProp name="accept-language" elementType="Header">
              <stringProp name="Header.name">accept-language</stringProp>
              <stringProp name="Header.value">${__P(IOS_ACCEPT_LANGUAGE)}</stringProp>
            </elementProp>
            <elementProp name="device-type" elementType="Header">
              <stringProp name="Header.name">device-type</stringProp>
              <stringProp name="Header.value">${__P(IOS_DEVICE_TYPE)}</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">Headers for iOS Post Ad to my.gumtree.com. Cookie is critical and provided via variable.</stringProp>
        </HeaderManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager">
          <collectionProp name="CookieManager.cookies"/>
          <stringProp name="TestPlan.comments">处理my.gumtree.com的Cookie</stringProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="8.1 Post Ad ">
          <stringProp name="TestPlan.comments">发布/重新发布广告接口 (iOS version)。预期成功 (200)。</stringProp>
          <stringProp name="HTTPSampler.domain">${__P(HOST_BFF)}</stringProp>
          <stringProp name="HTTPSampler.protocol">${__P(PROTOCOL)}</stringProp>
          <stringProp name="HTTPSampler.path">/v2/my-gumtree/ad/3906775808a143cf98bb75573ffb341d/repost</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="断言状态码 204">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49590">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">期望发布广告成功返回状态码 200 (OK)。</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>true</responseHeaders>
            <requestHeaders>true</requestHeaders>
            <responseDataOnError>true</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
